#!/usr/bin/env bash

# LOCAL_USER_DIR="${SNAP_DATA}/${USER}"
#
# if [[ `whoami` = "root" ]]; then
#     echo "Do not run as root"
#     exit 1
# fi
#
# if ! [[ -d "${LOCAL_USER_DIR}" ]]; then
#     echo "Please run 'sudo acme-sh.init'"
#     exit 1
# fi
#
# export LE_CONFIG_HOME="${USER_DATA}/data"
#
# if [ -h "${LE_CONFIG_HOME}" ]; then
#     rm "${LE_CONFIG_HOME}"
# else
#     if [ -d "${LE_CONFIG_HOME}" ]; then
#         echo "${LE_CONFIG_HOME} is not an symbolic link"
#         exit 1
#     fi
# fi
#
# ln -s "${LOCAL_USER_DIR}" "${LE_CONFIG_HOME}"
# if [ $? -ne 0 ]; then
#     echo "Error linking ${LE_CONFIG_HOME}"
#     exit 1
# fi
#
# if ! [[ -f "${LOCAL_USER_DIR}/.local" ]]; then
#     PWD=`pwd`
#     cd "${USER_DATA}/.."
#     DOT_LOCAL="`pwd`"
#     cd "${PWD}"
#     echo "${DOT_LOCAL}" > ${LOCAL_USER_DIR}/.local
#     echo ""
#     echo "Please take your time to read the help 'acme-sh --help', and"
#     echo " - "https://github.com/acmesh-official/acme.sh
#     echo ""
#     echo "If you're using the DNS manual mode, READ this:"
#     echo " - https://github.com/acmesh-official/acme.sh/wiki/dns-manual-mode"
#     echo " - https://github.com/acmesh-official/acme.sh#9-use-dns-manual-mode"
#     echo " - AND note that adding the TXT-record to your DNS can take time to"
#     echo "   update. It's recommended to wait 10 minutes between --issue and --renew"
#     echo ""
#     echo "There will be set up a daemon (timer) which will try to refresh your"
#     echo "certificate(s) twice a day."
#     echo ""
#     echo "For apps that need to read certificates, they must support the 'certs'"
#     echo "plug and be connected throug plugs/slots and by acme-sh.connect."
#     echo "However classic snaps can read it from your home directory."
#     echo ""
#     echo "Do not manually edit any of the data in the diretory: ${LOCAL_USER_DIR}"
#     echo " - yes, we know you have 'rwx'-rights - but let's acme-sh manage them."
#     echo ""
#     if [ -z "${SUDO_USER}" ]; then
#         read -p "Press any key when you're ready to resume."
#     fi
# fi
#
# export ACCOUNT_CONF_PATH="${LE_CONFIG_HOME}/account.sh.env"
# export CERT_HOME="${LE_CONFIG_HOME}/certs"
# export CA_HOME="${LE_CONFIG_HOME}/ca"
#
# LOCATIONS=(
# ${ACCOUNT_CONF_PATH}
# ${CERT_HOME}
# ${CA_HOME}
# )
#
# if ! [[ -h "${LE_CONFIG_HOME}" ]]; then
#     echo "Config-home is missing, try fix this by running: 'sudo acme-sh.init'"
#     exit 1
# fi
#
# for DIR in "${LOCATIONS[@]}"; do
#     if [[ -d "${DIR}" ]]; then
#         if [[ -r "${DIR}" ]] || [[ -w "${DIR}" ]]; then
#             continue
#         fi
#     elif [[ -f "${DIR}" ]]; then
#         if [[ -r "${DIR}" ]] || [[ -w "${DIR}" ]]; then
#             continue
#         fi
#     fi
#     echo "Wrong permissions for ${DIR}, please run 'sudo acme-sh.init' to fix the problem."
#     exit 1
# done
#
# if [ -z "${SUDO_USER}" ]; then
#     for XARG in "$@"; do
#         if [ "${XARG}" = "--renew" ]; then
#             echo -e "\e[31mManual renewal of a certificate wont update the connection between other\e[0m"
#             echo -e "\e[31msnaps. To force a new connection, run 'acme-sh.connect' again after the renewal.\e[0m"
#             echo -e "\e[31mThe\e[1m 'renew-daemon' will auto-update\e[0m \e[31mconnections when certificates renews.\e[0m"
#             echo ""
#             read -p "Press C+ENTER to cancel and wait for an auto-update, or any other key to resume: " INPUT
#             case "${INPUT^}" in
#                 "C") exit 1 ;;
#             esac
#         fi
#     done
# fi
exec $@
